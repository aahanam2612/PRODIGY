def caesar_cipher(text, shift, mode):
    result = ""
    for char in text:
        if char.isalpha():  # Check if the character is a letter
            # Determine the offset based on the mode (encrypt or decrypt)
            if mode == "encrypt":
                offset = ord('A' if char.isupper() else 'a')
            elif mode == "decrypt":
                offset = ord('Z' if char.isupper() else 'z')
            else:
                raise ValueError("Mode must be 'encrypt' or 'decrypt'")
            
            # Apply the shift and handle wrapping
            shifted_char = chr((ord(char) - offset + shift) % 26 + offset)
            result += shifted_char
        else:
            result += char  # Keep non-alphabetic characters unchanged
    return result

def main():
    while True:
        try:
            mode = input("Enter 'encrypt' or 'decrypt': ").lower()
            if mode not in ['encrypt', 'decrypt']:
                raise ValueError("Mode must be 'encrypt' or 'decrypt'")
            
            text = input("Enter the message: ")
            shift = int(input("Enter the shift value (an integer): "))
            
            # Perform encryption or decryption based on the chosen mode
            if mode == 'encrypt':
                encrypted_text = caesar_cipher(text, shift, mode)
                print("Encrypted text:", encrypted_text)
            else:
                decrypted_text = caesar_cipher(text, shift, mode)
                print("Decrypted text:", decrypted_text)
            
            break
        except ValueError as ve:
            print("Error:", ve)
            continue

if __name__ == "__main__":
    main()
